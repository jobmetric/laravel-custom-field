<?php

namespace JobMetric\CustomField\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Str;
use JobMetric\CustomField\Support\CustomFieldRegistry;
use JobMetric\PackageCore\Commands\ConsoleTools;

class GenerateIdeHelpers extends Command
{
    use ConsoleTools;

    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'custom-field:ide';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generate IDE helper stubs for CustomFieldBuilder macros';

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle(): int
    {
        /** @var CustomFieldRegistry $registry */
        $registry = app('CustomFieldRegistry');
        $methods = [];

        foreach ($registry->all() as $field) {
            $type = $field::type();
            $method = Str::camel($type);
            $fqcn = '\\' . ltrim(get_class($field), '\\');
            $methods[] = " * @method static {$fqcn} {$method}()";
        }

        $doc = "/**\n" . " * This file is auto-generated by custom-field:ide\n" . " * It provides dynamic method hints for IDEs.\n" . " *\n" . implode("\n", $methods) . "\n */";

        $content = <<<PHP
<?php

namespace JobMetric\\CustomField;

{$doc}
class CustomFieldBuilder
{
    // This class is intentionally left empty. Its purpose is to provide IDE hints for dynamically registered macros.
}
PHP;

        $target = base_path('_ide_helper_custom_field.php');
        file_put_contents($target, $content);

        $this->info("IDE helper generated: {$target}");

        return self::SUCCESS;
    }
}
